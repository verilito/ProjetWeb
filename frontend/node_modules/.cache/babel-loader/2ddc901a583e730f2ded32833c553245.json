{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\www\\\\ProjetWeb\\\\frontend\\\\src\\\\Card.js\";\nimport React, { Component } from 'react';\n\nlet numeral = require('numeral');\n\nlet backdropIMG;\n\nclass Card extends Component {\n  render() {\n    let data = this.props.data; // if movie ID found, then...\n\n    let posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster,\n        production = data.production,\n        productionCountries = data.production_countries,\n        genres = data.genre,\n        totalRevenue = data.revenue,\n        productionList = nestedDataToString(production),\n        productionCountriesList = nestedDataToString(productionCountries),\n        noData = '-',\n        genresList = nestedDataToString(genres);\n    backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop; // conditional statements for no data\n\n    if (data.vote === 'undefined' || data.vote === 0) {\n      data.vote = noData;\n    } else {\n      data.vote = data.vote + ' / 10';\n    }\n\n    ;\n\n    if (totalRevenue === 'undefined' || totalRevenue === 0) {\n      totalRevenue = noData;\n    } else {\n      totalRevenue = numeral(data.revenue).format('($0,0)');\n    }\n\n    ;\n\n    if (data.poster == null) {\n      posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-xs-12 cardcont nopadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"meta-data-container col-xs-12 col-md-8 push-md-4 col-lg-7 push-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, data.original_title), React.createElement(\"span\", {\n      className: \"tagline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, data.tagline), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, data.overview), React.createElement(\"div\", {\n      className: \"additional-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"genre-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, genresList), React.createElement(\"span\", {\n      className: \"production-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, productionList), React.createElement(\"div\", {\n      className: \"row nopadding release-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Original Release: \", React.createElement(\"span\", {\n      className: \"meta-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, data.release)), React.createElement(\"div\", {\n      className: \"col-xs-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Running Time: \", React.createElement(\"span\", {\n      className: \"meta-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, data.runtime, \" mins\"), \" \"), React.createElement(\"div\", {\n      className: \"col-xs-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Box Office: \", React.createElement(\"span\", {\n      className: \"meta-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, totalRevenue)), React.createElement(\"div\", {\n      className: \"col-xs-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Vote Average: \", React.createElement(\"span\", {\n      className: \"meta-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, data.vote))))), React.createElement(\"div\", {\n      className: \"poster-container nopadding col-xs-12 col-md-4 pull-md-8 col-lg-5 pull-lg-7 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"postertest\",\n      className: \"poster\",\n      src: posterIMG,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n  componentDidUpdate() {\n    document.body.style.backgroundImage = 'url(' + backdropIMG + ')';\n  }\n\n}\n\nfunction nestedDataToString(nestedData) {\n  let nestedArray = [],\n      resultString;\n\n  if (nestedData !== undefined) {\n    nestedData.forEach(function (item) {\n      nestedArray.push(item.name);\n    });\n  }\n\n  resultString = nestedArray.join(', '); // array to string\n\n  return resultString;\n}\n\n;\nexport default ItemsList;","map":{"version":3,"sources":["C:/wamp64/www/www/ProjetWeb/frontend/src/Card.js"],"names":["React","Component","numeral","require","backdropIMG","Card","render","data","props","posterIMG","poster","production","productionCountries","production_countries","genres","genre","totalRevenue","revenue","productionList","nestedDataToString","productionCountriesList","noData","genresList","backdrop","vote","format","original_title","tagline","overview","release","runtime","componentDidUpdate","document","body","style","backgroundImage","nestedData","nestedArray","resultString","undefined","forEach","item","push","name","join","ItemsList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nlet numeral = require('numeral');\r\nlet backdropIMG;\r\n\r\nclass Card extends Component {\r\n\r\n    render() {\r\n        let data = this.props.data\r\n        // if movie ID found, then...\r\n\r\n\r\n\r\n        let posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster,\r\n            production = data.production,\r\n            productionCountries = data.production_countries,\r\n            genres = data.genre,\r\n            totalRevenue = data.revenue,\r\n            productionList = nestedDataToString(production),\r\n            productionCountriesList = nestedDataToString(productionCountries),\r\n            noData = '-',\r\n            genresList = nestedDataToString(genres);\r\n        backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop;\r\n\r\n\r\n\r\n        // conditional statements for no data\r\n        if (data.vote === 'undefined' || data.vote === 0) {\r\n            data.vote = noData\r\n        } else {\r\n            data.vote = data.vote + ' / 10'\r\n        };\r\n\r\n        if (totalRevenue === 'undefined' || totalRevenue === 0) {\r\n            totalRevenue = noData\r\n        } else {\r\n            totalRevenue = numeral(data.revenue).format('($0,0)');\r\n        };\r\n\r\n        if (data.poster == null) {\r\n            posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g';\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"col-xs-12 cardcont nopadding\">\r\n\r\n                <div className=\"meta-data-container col-xs-12 col-md-8 push-md-4 col-lg-7 push-lg-5\">\r\n                    <h1>{data.original_title}</h1>\r\n\r\n                    <span className=\"tagline\">{data.tagline}</span>\r\n                    <p>{data.overview}</p>\r\n                    <div className=\"additional-details\">\r\n                        <span className=\"genre-list\">{genresList}</span>\r\n                        <span className=\"production-list\">{productionList}</span>\r\n                        <div className=\"row nopadding release-details\">\r\n                            <div className=\"col-xs-6\"> Original Release: <span className=\"meta-data\">{data.release}</span></div>\r\n                            <div className=\"col-xs-6\"> Running Time: <span className=\"meta-data\">{data.runtime} mins</span> </div>\r\n                            <div className=\"col-xs-6\"> Box Office: <span className=\"meta-data\">{totalRevenue}</span></div>\r\n                            <div className=\"col-xs-6\"> Vote Average: <span className=\"meta-data\">{data.vote}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"poster-container nopadding col-xs-12 col-md-4 pull-md-8 col-lg-5 pull-lg-7 \">\r\n                    <img id=\"postertest\" className='poster' src={posterIMG} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidUpdate() {\r\n        document.body.style.backgroundImage = 'url(' + backdropIMG + ')';\r\n    }\r\n}\r\n\r\n\r\nfunction nestedDataToString(nestedData) {\r\n    let nestedArray = [],\r\n        resultString;\r\n    if (nestedData !== undefined) {\r\n        nestedData.forEach(function (item) {\r\n            nestedArray.push(item.name);\r\n        });\r\n    }\r\n    resultString = nestedArray.join(', '); // array to string\r\n    return resultString;\r\n};\r\nexport default ItemsList;"]},"metadata":{},"sourceType":"module"}