{"ast":null,"code":"/*export const mediaTypes = [\r\n    'movie',\r\n    'podcast',\r\n    'music',\r\n    'musicVideo',\r\n    'audiobook',\r\n    'shortFilm',\r\n    'tvShow',\r\n    'software',\r\n    'ebook',\r\n    'all',\r\n];\r\n*/\nexport async function itunesApiRequest(term, media = 'all') {\n  const url = new URL('https://itunes.apple.com/search');\n  const params = {\n    country: 'FR',\n    lang: 'fr_fr',\n    limit: 50,\n    term,\n    media\n  };\n\n  try {\n    url.search = new URLSearchParams(params);\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}","map":{"version":3,"sources":["C:/wamp64/www/www/ProjetWeb/frontend/src/utils.js"],"names":["itunesApiRequest","term","media","url","URL","params","country","lang","limit","search","URLSearchParams","response","fetch","data","json","console","log","error"],"mappings":"AAAA;;;;;;;;;;;;;AAaA,OAAO,eAAeA,gBAAf,CAAgCC,IAAhC,EAAsCC,KAAK,GAAG,KAA9C,EAAqD;AACxD,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,iCAAR,CAAZ;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE,IADE;AAEXC,IAAAA,IAAI,EAAE,OAFK;AAGXC,IAAAA,KAAK,EAAE,EAHI;AAIXP,IAAAA,IAJW;AAKXC,IAAAA;AALW,GAAf;;AAOA,MAAI;AACAC,IAAAA,GAAG,CAACM,MAAJ,GAAa,IAAIC,eAAJ,CAAoBL,MAApB,CAAb;AACA,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACH,GAND,CAME,OAAOI,KAAP,EAAc;AACZF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACH;AACJ","sourcesContent":["/*export const mediaTypes = [\r\n    'movie',\r\n    'podcast',\r\n    'music',\r\n    'musicVideo',\r\n    'audiobook',\r\n    'shortFilm',\r\n    'tvShow',\r\n    'software',\r\n    'ebook',\r\n    'all',\r\n];\r\n*/\r\nexport async function itunesApiRequest(term, media = 'all') {\r\n    const url = new URL('https://itunes.apple.com/search');\r\n    const params = {\r\n        country: 'FR',\r\n        lang: 'fr_fr',\r\n        limit: 50,\r\n        term,\r\n        media,\r\n    };\r\n    try {\r\n        url.search = new URLSearchParams(params);\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}