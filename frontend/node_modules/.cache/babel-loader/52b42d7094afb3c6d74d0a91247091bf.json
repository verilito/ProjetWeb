{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\www\\\\ProjetWeb\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { itunesApiRequest, mediaTypes } from './utils';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: []\n    };\n    this.updateSearch = this.updateSearch.bind(this);\n  }\n\n  async updateSearch(text, media) {\n    const response = await itunesApiRequest(text, media);\n    this.setState({\n      searchResults: response.results\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Header, {\n      mediaTypes: mediaTypes,\n      startSearch: this.updateSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(ItemsList, {\n      items: this.state.searchResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/wamp64/www/www/ProjetWeb/frontend/src/App.js"],"names":["React","Component","itunesApiRequest","mediaTypes","App","constructor","props","state","searchResults","updateSearch","bind","text","media","response","setState","results","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,SAA7C;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACD,QAAMD,YAAN,CAAmBE,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9B,UAAMC,QAAQ,GAAG,MAAMX,gBAAgB,CAACS,IAAD,EAAOC,KAAP,CAAvC;AACA,SAAKE,QAAL,CAAc;AAAEN,MAAAA,aAAa,EAAEK,QAAQ,CAACE;AAA1B,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,WACE,0CACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAEb,UAApB;AAAgC,MAAA,WAAW,EAAE,KAAKM,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AASD;;AAtByB;;AAyB5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { itunesApiRequest, mediaTypes } from './utils';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { searchResults: [] };\r\n    this.updateSearch = this.updateSearch.bind(this);\r\n  }\r\n  async updateSearch(text, media) {\r\n    const response = await itunesApiRequest(text, media);\r\n    this.setState({ searchResults: response.results });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <Content>\r\n          <Header mediaTypes={mediaTypes} startSearch={this.updateSearch} />\r\n          <ItemsList items={this.state.searchResults} />\r\n        </Content>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}